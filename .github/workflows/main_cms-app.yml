# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions
# More info on Python, GitHub Actions, and Azure App Service: https://aka.ms/python-webapps-actions

name: Build and deploy Python app to Azure Web App - cms-app

# This workflow triggers when code is pushed to the main branch or manually dispatched
on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  # The build job compiles the app and prepares it for deployment
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the latest code from the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up Python version 3.10 for the environment
      - name: Set up Python version
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      # Step 3: Create a virtual environment and activate it
      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate

      # Step 4: Install the Python project dependencies
      - name: Install dependencies
        run: |
          source venv/bin/activate
          pip install -r requirements.txt

      # Step 5: Optional step to add tests (PyTest, unit tests, etc.)
      # Uncomment and customize the following lines to include tests
      # - name: Run tests
      #   run: |
      #     source venv/bin/activate
      #     pytest

      # Step 6: Zip the application for deployment
      - name: Zip artifact for deployment
        run: zip release.zip ./* -r

      # Step 7: Upload the artifact (release.zip) to be used in the deployment job
      - name: Upload artifact for deployment
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: |
            release.zip
            !venv/  # Exclude the virtual environment

  # The deploy job deploys the app to Azure Web App
  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write  # Required for requesting the JWT

    steps:
      # Step 1: Download the build artifact from the build job
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-app

      # Step 2: Unzip the artifact for deployment
      - name: Unzip artifact for deployment
        run: unzip release.zip

      # Step 3: Log in to Azure using credentials from GitHub Secrets
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.CLIENT_ID }}
          tenant-id: ${{ secrets.TENANT_ID }}
          subscription-id: ${{ secrets.SUBSCRIPTION_ID }}

      # Step 4: Deploy the application to Azure Web App
      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: 'cms-app'  # Ensure the app name matches the Azure Web App name
          slot-name: 'Production'

      # Step 5: Set Azure Web App environment settings (App Settings)
      # These settings are essential for your app's configurations (DB connections, secret keys, etc.)
      - name: Set App Settings
        run: |
          az webapp config appsettings set --resource-group cms --name cms-app --settings \
            CLIENT_SECRET=${{ secrets.CLIENT_SECRET }} \
            CLIENT_ID=${{ secrets.CLIENT_ID }} \
            SQL_PASSWORD=${{ secrets.SQL_PASSWORD }} \
            BLOB_STORAGE_KEY=${{ secrets.BLOB_STORAGE_KEY }} \
            SECRET_KEY=${{ secrets.SECRET_KEY }} \
            SQL_SERVER=${{ secrets.SQL_SERVER }} \
            SQL_DATABASE=${{ secrets.SQL_DATABASE }} \
            BLOB_CONTAINER=${{ secrets.BLOB_CONTAINER }} \
            BLOB_ACCOUNT=${{ secrets.BLOB_ACCOUNT }} \
            BLOB_STORAGE_URL=${{ secrets.BLOB_STORAGE_URL }}

      # Optional: Step to restart the app service after updating the app settings
      - name: Restart Azure Web App
        run: |
          az webapp restart --name cms-app --resource-group cms
